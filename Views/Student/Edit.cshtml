@model jqueryCrud.Models.Student

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Student</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "stName" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Roll, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Roll, new { htmlAttributes = new { @class = "form-control", @id = "stRoll" } })
            @Html.ValidationMessageFor(model => model.Roll, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @id = "stAddress" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Gender", null, "Select", htmlAttributes: new { @class = "form-control search-select readonly", @Name = "Gender", @id = "stGen" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClassId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Class", null, "Select", htmlAttributes: new { @class = "form-control search-select readonly", @Name = "ClassId", @id = "classID" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StudentPerformance.EnglishScore, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StudentPerformance.EnglishScore, new { htmlAttributes = new { @class = "form-control", @id = "engScore" } })
            @Html.ValidationMessageFor(model => model.StudentPerformance.EnglishScore, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StudentPerformance.MathScore, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StudentPerformance.MathScore, new { htmlAttributes = new { @class = "form-control", @id = "mathScore" } })
            @Html.ValidationMessageFor(model => model.StudentPerformance.MathScore, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StudentPerformance.ScienceScore, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StudentPerformance.ScienceScore, new { htmlAttributes = new { @class = "form-control", @id = "scienceScore" } })
            @Html.ValidationMessageFor(model => model.StudentPerformance.ScienceScore, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StudentPerformance.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StudentPerformance.Remarks, new { htmlAttributes = new { @class = "form-control", @id = "remarks" } })
            @Html.ValidationMessageFor(model => model.StudentPerformance.Remarks, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" id="clickit" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    function isEmptyOrSpaces(str) {
        return str === null || str.match(/^ *$/) !== null;
    }
    $(document).ready(function () {
        alert("wow");
        $("#clickit").click(function () {
            var name = $("#stName").val();
            var roll = $("#stRoll").val();
            var address = $("#stAddress").val();
            var gender = $("#stGen :selected").val();
            var classId = $("#classID :selected").val();
            var english = $("#engScore").val();
            var math = $("#mathScore").val();
            var science = $("#scienceScore").val();
            var remarks = $("#remarks").val();
            if (isEmptyOrSpaces(name)) {
                toastr.error("Name is required");
                return false;
            }
            else if (Number(roll) <= 0) {
                toastr.error("Roll number is invalid");
                return false;
            }
            else if (isEmptyOrSpaces(address)) {
                toastr.error("Address is required");
                return false;
            }
            else if (!['M','F','O'].includes(gender)) {
                toastr.error("Gender is not selected");
                return false;
            }
            else if (classId <= 0) {
                toastr.error("Please select a class");
                return false;
            }
            else if (Number(math) < 0) {
                toastr.error("Please enter math score");
                return false;
            } else if (Number(science) < 0) {
                toastr.error("Please enter science score");
                return false;
            } else if (Number(english) < 0) {
                toastr.error("Please englsih score");
                return false;
            }
            else if (isEmptyOrSpaces(remarks)) {
                toastr.error("Enter remarks")
                return false;
            }
            return true;
        });
    });
</script>
